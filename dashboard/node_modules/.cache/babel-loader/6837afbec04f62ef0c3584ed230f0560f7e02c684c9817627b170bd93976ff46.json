{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raghu\\\\Dropbox\\\\InfinityAI.Pro\\\\dashboard\\\\src\\\\components\\\\FundBalance.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FundBalance = () => {\n  _s();\n  const [balance, setBalance] = useState(null);\n  useEffect(() => {\n    fetch(process.env.REACT_APP_API_URL + '/api/dhan/balance').then(res => res.json()).then(setBalance).catch(() => setBalance({\n      balance: null,\n      currency: '',\n      error: 'Unable to connect to backend'\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fund Balance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), balance ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Balance: \", balance.balance, \" \", balance.currency]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(FundBalance, \"jVNYAZEGj1sGAPMItn3FqAYCKxM=\");\n_c = FundBalance;\nexport default FundBalance;\nvar _c;\n$RefreshReg$(_c, \"FundBalance\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","FundBalance","_s","balance","setBalance","fetch","process","env","REACT_APP_API_URL","then","res","json","catch","currency","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Raghu/Dropbox/InfinityAI.Pro/dashboard/src/components/FundBalance.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst FundBalance = () => {\r\n  const [balance, setBalance] = useState<any>(null);\r\n\r\n  useEffect(() => {\r\n    fetch(process.env.REACT_APP_API_URL + '/api/dhan/balance')\r\n      .then(res => res.json())\r\n      .then(setBalance)\r\n      .catch(() => setBalance({ balance: null, currency: '', error: 'Unable to connect to backend' }));\r\n  }, []);\r\n\r\n  return (\r\n    <section>\r\n      <h2>Fund Balance</h2>\r\n      {balance ? (\r\n        <div>\r\n          <p>Balance: {balance.balance} {balance.currency}</p>\r\n        </div>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default FundBalance;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAM,IAAI,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACdQ,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,iBAAiB,GAAG,mBAAmB,CAAC,CACvDC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACL,UAAU,CAAC,CAChBQ,KAAK,CAAC,MAAMR,UAAU,CAAC;MAAED,OAAO,EAAE,IAAI;MAAEU,QAAQ,EAAE,EAAE;MAAEC,KAAK,EAAE;IAA+B,CAAC,CAAC,CAAC;EACpG,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBhB,OAAO,gBACNH,OAAA;MAAAe,QAAA,eACEf,OAAA;QAAAe,QAAA,GAAG,WAAS,EAACZ,OAAO,CAACA,OAAO,EAAC,GAAC,EAACA,OAAO,CAACU,QAAQ;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,gBAENnB,OAAA;MAAAe,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACjB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEd,CAAC;AAACjB,EAAA,CAtBID,WAAW;AAAAmB,EAAA,GAAXnB,WAAW;AAwBjB,eAAeA,WAAW;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}